apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-ingest-management
  namespace: kube-system
  labels:
    app: kibana-ingest-management
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      app: kibana-ingest-management
  template:
    metadata:
      labels:
        app: kibana-ingest-management
    spec:
      volumes:
        - name: kibana-yaml-config
          configMap:
            defaultMode: 420
            name: kibana-yaml-storage
      containers:
        - name: kibana-ingest-management
          image: docker.elastic.co/kibana/kibana:8.0.0-SNAPSHOT
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
          volumeMounts:
            - mountPath: /usr/share/kibana/config
              name: kibana-yaml-config
          ports:
            - containerPort: 5601
              name: ui
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: kube-system
  labels:
    app: kibana-ingest-management
spec:
  type: NodePort
  selector:
    app: kibana-ingest-management
  ports:
    - name: http
      port: 5601
      targetPort: 5601
      protocol: TCP
      nodePort: 30561
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-yaml-storage
data:
  kibana.yml: |-
    server.name: kibana
    server.host: "0"

    elasticsearch.hosts: [ "http://elasticsearch:9200" ]
    elasticsearch.username: elastic
    elasticsearch.password: changeme
    xpack.monitoring.ui.container.elasticsearch.enabled: true

    xpack.ingestManager.enabled: true
    xpack.ingestManager.epm.enabled: true
    xpack.ingestManager.epm.registryUrl: "http://registry:8080"
    xpack.ingestManager.fleet.enabled: true
    xpack.ingestManager.fleet.elasticsearch.host: "http://elasticsearch:9200"
    xpack.ingestManager.fleet.kibana.host: "http:/kibana:5601"
    xpack.ingestManager.fleet.tlsCheckDisabled: true
